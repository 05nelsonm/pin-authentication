apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: rootProject.file('gradle/maven-publish.gradle')

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    testOptions.unitTests.includeAndroidResources = true
    buildFeatures.dataBinding = true
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 29
        versionCode VERSION_CODE.toInteger()
        versionName VERSION_NAME

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        kotlinOptions.freeCompilerArgs += ["-Xinline-classes", "-Xopt-in=kotlin.RequiresOptIn"]
    }
}

dokka {
    configuration {
        reportUndocumented = false
        includeNonPublic = false
        skipEmptyPackages = true
        samples = [
                "$rootDir/demo/src/main/java/io/matthewnelson/pin_authentication_demo/App.kt".toString(),
                "$rootDir/demo/src/main/java/io/matthewnelson/pin_authentication_demo/MainActivity.kt".toString(),
                "$rootDir/demo/src/main/java/io/matthewnelson/pin_authentication_demo/ui/ControllerFragment.kt".toString(),
                "$rootDir/demo/src/main/java/io/matthewnelson/pin_authentication_demo/ui/OnBoardFragment.kt".toString(),
                "$rootDir/demo/src/main/java/io/matthewnelson/pin_authentication_demo/ui/SettingsFragment.kt".toString()
        ]
        sourceLink {
            url = "https://github.com/05nelsonm/pin-authentication/blob/master/"
            lineSuffix = "#L"
        }
    }
    outputFormat = 'gfm'
    outputDirectory = "$rootDir/docs/"
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "androidx.constraintlayout:constraintlayout:1.1.3"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-reactivestreams-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"

    implementation 'com.google.dagger:dagger:2.27'
    kapt 'com.google.dagger:dagger-compiler:2.27'
    kaptTest 'com.google.dagger:dagger-compiler:2.27'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.6"

    implementation 'io.matthewnelson.encrypted-storage:encrypted-storage:1.0.1'

    testImplementation 'junit:junit:4.12'
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
    testImplementation "org.robolectric:robolectric:4.3.1"
    testImplementation 'androidx.test:core:1.2.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}